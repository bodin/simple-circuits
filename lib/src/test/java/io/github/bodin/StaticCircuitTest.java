/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package io.github.bodin;

import com.google.common.collect.Sets;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.assertFalse;
import static org.junit.jupiter.api.Assertions.assertTrue;

class StaticCircuitTest {
    @Test void testAlwaysOpenCircuit() {
        Circuit alwaysOpen = new StaticCircuit(true);

        assertTrue(alwaysOpen.isOpen(), "StaticCircuit should return 'true'");
        assertFalse(alwaysOpen.isClosed(), "StaticCircuit should return 'false'");
    }

    @Test void testAlwaysClosedCircuit() {
        Circuit alwaysOpen = new StaticCircuit(false);

        assertFalse(alwaysOpen.isOpen(), "StaticCircuit should return 'false'");
        assertTrue(alwaysOpen.isClosed(), "StaticCircuit should return 'true'");
    }

    @Test void testCircuitServiceAlwaysOpen() {
        CircuitService service = new StaticCircuitService(Sets.newHashSet("always-open"));
        Circuit alwaysOpen = service.create("always-open");

        assertTrue(alwaysOpen.isOpen(), "StaticCircuit should return 'true'");
        assertFalse(alwaysOpen.isClosed(), "StaticCircuit should return 'false'");
    }
    @Test void testCircuitServiceAlwaysClosed() {
        CircuitService service = new StaticCircuitService(Sets.newHashSet("always-open"));
        Circuit alwaysOpen = service.create("always-closed");

        assertFalse(alwaysOpen.isOpen(), "StaticCircuit should return 'false'");
        assertTrue(alwaysOpen.isClosed(), "StaticCircuit should return 'true'");
    }
}
